{"ast":null,"code":"var _jsxFileName = \"/workspaces/Trade25/frontend/src/components/user/UserDashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport zoomPlugin from 'chartjs-plugin-zoom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default UserDashboard;\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, zoomPlugin);\nfunction getSectorChartData(sector) {\n  // Generate time series data for the sector\n  const months = ['Sep 2024', 'Nov 2024', 'Jan 2025', 'Mar 2025', 'May 2025', 'Jul 2025'];\n  const baseValue = Math.random() * 100 + 50;\n  const data = months.map((month, index) => baseValue + (Math.random() - 0.5) * 20 + index * 2);\n  // Calculate simple moving average (window size 2 for demo)\n  const movingAvg = data.map((d, i, arr) => {\n    if (i === 0) return d;\n    return (arr[i - 1] + d) / 2;\n  });\n  return {\n    labels: months,\n    data,\n    movingAvg\n  };\n}\nconst chartOptions = {\n  responsive: true,\n  maintainAspectRatio: false,\n  plugins: {\n    legend: {\n      display: false\n    },\n    tooltip: {\n      mode: 'index',\n      intersect: false\n    },\n    zoom: {\n      zoom: {\n        wheel: {\n          enabled: true\n        },\n        pinch: {\n          enabled: true\n        },\n        mode: 'xy',\n        sensitivity: 0.1,\n        speed: 0.1\n      },\n      pan: {\n        enabled: true,\n        mode: 'xy',\n        speed: 0.5\n      },\n      limits: {\n        y: {\n          min: 0,\n          max: 500\n        },\n        x: {\n          min: 0,\n          max: 12\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      display: true,\n      grid: {\n        display: false\n      },\n      ticks: {\n        font: {\n          size: 10\n        }\n      }\n    },\n    y: {\n      display: true,\n      grid: {\n        color: 'rgba(0,0,0,0.1)'\n      },\n      ticks: {\n        font: {\n          size: 10\n        }\n      }\n    }\n  },\n  interaction: {\n    mode: 'nearest',\n    axis: 'x',\n    intersect: false\n  }\n};\nconst UserDashboard = () => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    setLoading(false);\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center align-items-center vh-100\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner-border text-primary\",\n        role: \"status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this);\n  }\n  const techSector = getSectorChartData('Technology');\n  const techChartData = {\n    labels: techSector.labels,\n    datasets: [{\n      label: 'Price',\n      data: techSector.data,\n      borderColor: 'blue',\n      borderWidth: 2,\n      fill: false\n    }, {\n      label: 'Moving Avg',\n      data: techSector.movingAvg,\n      borderColor: 'red',\n      borderWidth: 2,\n      borderDash: [8, 4],\n      fill: false\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container py-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mb-4\",\n      children: \"User Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-8 mx-auto\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card shadow-sm\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"card-title\",\n              children: \"Technology Sector Chart\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                height: '300px'\n              },\n              children: /*#__PURE__*/_jsxDEV(Line, {\n                data: techChartData,\n                options: chartOptions\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 9\n  }, this);\n};\n_s(UserDashboard, \"J7PPXooW06IQ11rfabbvgk72KFw=\");\n_c = UserDashboard;\nvar _c;\n$RefreshReg$(_c, \"UserDashboard\");","map":{"version":3,"names":["React","useState","useEffect","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","zoomPlugin","jsxDEV","_jsxDEV","UserDashboard","register","getSectorChartData","sector","months","baseValue","Math","random","data","map","month","index","movingAvg","d","i","arr","labels","chartOptions","responsive","maintainAspectRatio","plugins","legend","display","tooltip","mode","intersect","zoom","wheel","enabled","pinch","sensitivity","speed","pan","limits","y","min","max","x","scales","grid","ticks","font","size","color","interaction","axis","_s","loading","setLoading","className","children","role","fileName","_jsxFileName","lineNumber","columnNumber","techSector","techChartData","datasets","label","borderColor","borderWidth","fill","borderDash","style","height","options","_c","$RefreshReg$"],"sources":["/workspaces/Trade25/frontend/src/components/user/UserDashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend,\n} from 'chart.js';\nimport zoomPlugin from 'chartjs-plugin-zoom';\nexport default UserDashboard;\nChartJS.register(\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend,\n    zoomPlugin\n);\n\nfunction getSectorChartData(sector) {\n    // Generate time series data for the sector\n    const months = ['Sep 2024', 'Nov 2024', 'Jan 2025', 'Mar 2025', 'May 2025', 'Jul 2025'];\n    const baseValue = Math.random() * 100 + 50;\n    const data = months.map((month, index) => baseValue + (Math.random() - 0.5) * 20 + index * 2);\n    // Calculate simple moving average (window size 2 for demo)\n    const movingAvg = data.map((d, i, arr) => {\n        if (i === 0) return d;\n        return (arr[i - 1] + d) / 2;\n    });\n    return {\n        labels: months,\n        data,\n        movingAvg,\n    };\n}\n\nconst chartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n        legend: {\n            display: false,\n        },\n        tooltip: {\n            mode: 'index',\n            intersect: false,\n        },\n        zoom: {\n            zoom: {\n                wheel: {\n                    enabled: true,\n                },\n                pinch: {\n                    enabled: true,\n                },\n                mode: 'xy',\n                sensitivity: 0.1,\n                speed: 0.1,\n            },\n            pan: {\n                enabled: true,\n                mode: 'xy',\n                speed: 0.5,\n            },\n            limits: {\n                y: { min: 0, max: 500 },\n                x: { min: 0, max: 12 },\n            },\n        },\n    },\n    scales: {\n        x: {\n            display: true,\n            grid: {\n                display: false,\n            },\n            ticks: {\n                font: {\n                    size: 10,\n                },\n            },\n        },\n        y: {\n            display: true,\n            grid: {\n                color: 'rgba(0,0,0,0.1)',\n            },\n            ticks: {\n                font: {\n                    size: 10,\n                },\n            },\n        },\n    },\n    interaction: {\n        mode: 'nearest',\n        axis: 'x',\n        intersect: false,\n    },\n};\n\nconst UserDashboard = () => {\n    const [loading, setLoading] = useState(true);\n    useEffect(() => {\n        setLoading(false);\n    }, []);\n\n    if (loading) {\n        return (\n            <div className=\"d-flex justify-content-center align-items-center vh-100\">\n                <div className=\"spinner-border text-primary\" role=\"status\"></div>\n            </div>\n        );\n    }\n\n    const techSector = getSectorChartData('Technology');\n    const techChartData = {\n        labels: techSector.labels,\n        datasets: [\n            {\n                label: 'Price',\n                data: techSector.data,\n                borderColor: 'blue',\n                borderWidth: 2,\n                fill: false,\n            },\n            {\n                label: 'Moving Avg',\n                data: techSector.movingAvg,\n                borderColor: 'red',\n                borderWidth: 2,\n                borderDash: [8, 4],\n                fill: false,\n            },\n        ],\n    };\n\n    return (\n        <div className=\"container py-5\">\n            <h2 className=\"mb-4\">User Dashboard</h2>\n            <div className=\"row\">\n                <div className=\"col-md-8 mx-auto\">\n                    <div className=\"card shadow-sm\">\n                        <div className=\"card-body\">\n                            <h5 className=\"card-title\">Technology Sector Chart</h5>\n                            <div style={{ height: '300px' }}>\n                                <Line data={techChartData} options={chartOptions} />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,iBAAiB;AACtC,SACIC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MAAM,QACH,UAAU;AACjB,OAAOC,UAAU,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC7C,eAAeC,aAAa;AAC5BX,OAAO,CAACY,QAAQ,CACZX,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MAAM,EACNC,UACJ,CAAC;AAED,SAASK,kBAAkBA,CAACC,MAAM,EAAE;EAChC;EACA,MAAMC,MAAM,GAAG,CAAC,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC;EACvF,MAAMC,SAAS,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,EAAE;EAC1C,MAAMC,IAAI,GAAGJ,MAAM,CAACK,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAKN,SAAS,GAAG,CAACC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,IAAI,EAAE,GAAGI,KAAK,GAAG,CAAC,CAAC;EAC7F;EACA,MAAMC,SAAS,GAAGJ,IAAI,CAACC,GAAG,CAAC,CAACI,CAAC,EAAEC,CAAC,EAAEC,GAAG,KAAK;IACtC,IAAID,CAAC,KAAK,CAAC,EAAE,OAAOD,CAAC;IACrB,OAAO,CAACE,GAAG,CAACD,CAAC,GAAG,CAAC,CAAC,GAAGD,CAAC,IAAI,CAAC;EAC/B,CAAC,CAAC;EACF,OAAO;IACHG,MAAM,EAAEZ,MAAM;IACdI,IAAI;IACJI;EACJ,CAAC;AACL;AAEA,MAAMK,YAAY,GAAG;EACjBC,UAAU,EAAE,IAAI;EAChBC,mBAAmB,EAAE,KAAK;EAC1BC,OAAO,EAAE;IACLC,MAAM,EAAE;MACJC,OAAO,EAAE;IACb,CAAC;IACDC,OAAO,EAAE;MACLC,IAAI,EAAE,OAAO;MACbC,SAAS,EAAE;IACf,CAAC;IACDC,IAAI,EAAE;MACFA,IAAI,EAAE;QACFC,KAAK,EAAE;UACHC,OAAO,EAAE;QACb,CAAC;QACDC,KAAK,EAAE;UACHD,OAAO,EAAE;QACb,CAAC;QACDJ,IAAI,EAAE,IAAI;QACVM,WAAW,EAAE,GAAG;QAChBC,KAAK,EAAE;MACX,CAAC;MACDC,GAAG,EAAE;QACDJ,OAAO,EAAE,IAAI;QACbJ,IAAI,EAAE,IAAI;QACVO,KAAK,EAAE;MACX,CAAC;MACDE,MAAM,EAAE;QACJC,CAAC,EAAE;UAAEC,GAAG,EAAE,CAAC;UAAEC,GAAG,EAAE;QAAI,CAAC;QACvBC,CAAC,EAAE;UAAEF,GAAG,EAAE,CAAC;UAAEC,GAAG,EAAE;QAAG;MACzB;IACJ;EACJ,CAAC;EACDE,MAAM,EAAE;IACJD,CAAC,EAAE;MACCf,OAAO,EAAE,IAAI;MACbiB,IAAI,EAAE;QACFjB,OAAO,EAAE;MACb,CAAC;MACDkB,KAAK,EAAE;QACHC,IAAI,EAAE;UACFC,IAAI,EAAE;QACV;MACJ;IACJ,CAAC;IACDR,CAAC,EAAE;MACCZ,OAAO,EAAE,IAAI;MACbiB,IAAI,EAAE;QACFI,KAAK,EAAE;MACX,CAAC;MACDH,KAAK,EAAE;QACHC,IAAI,EAAE;UACFC,IAAI,EAAE;QACV;MACJ;IACJ;EACJ,CAAC;EACDE,WAAW,EAAE;IACTpB,IAAI,EAAE,SAAS;IACfqB,IAAI,EAAE,GAAG;IACTpB,SAAS,EAAE;EACf;AACJ,CAAC;AAED,MAAMzB,aAAa,GAAGA,CAAA,KAAM;EAAA8C,EAAA;EACxB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAG/D,QAAQ,CAAC,IAAI,CAAC;EAC5CC,SAAS,CAAC,MAAM;IACZ8D,UAAU,CAAC,KAAK,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAID,OAAO,EAAE;IACT,oBACIhD,OAAA;MAAKkD,SAAS,EAAC,yDAAyD;MAAAC,QAAA,eACpEnD,OAAA;QAAKkD,SAAS,EAAC,6BAA6B;QAACE,IAAI,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChE,CAAC;EAEd;EAEA,MAAMC,UAAU,GAAGtD,kBAAkB,CAAC,YAAY,CAAC;EACnD,MAAMuD,aAAa,GAAG;IAClBzC,MAAM,EAAEwC,UAAU,CAACxC,MAAM;IACzB0C,QAAQ,EAAE,CACN;MACIC,KAAK,EAAE,OAAO;MACdnD,IAAI,EAAEgD,UAAU,CAAChD,IAAI;MACrBoD,WAAW,EAAE,MAAM;MACnBC,WAAW,EAAE,CAAC;MACdC,IAAI,EAAE;IACV,CAAC,EACD;MACIH,KAAK,EAAE,YAAY;MACnBnD,IAAI,EAAEgD,UAAU,CAAC5C,SAAS;MAC1BgD,WAAW,EAAE,KAAK;MAClBC,WAAW,EAAE,CAAC;MACdE,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;MAClBD,IAAI,EAAE;IACV,CAAC;EAET,CAAC;EAED,oBACI/D,OAAA;IAAKkD,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC3BnD,OAAA;MAAIkD,SAAS,EAAC,MAAM;MAAAC,QAAA,EAAC;IAAc;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxCxD,OAAA;MAAKkD,SAAS,EAAC,KAAK;MAAAC,QAAA,eAChBnD,OAAA;QAAKkD,SAAS,EAAC,kBAAkB;QAAAC,QAAA,eAC7BnD,OAAA;UAAKkD,SAAS,EAAC,gBAAgB;UAAAC,QAAA,eAC3BnD,OAAA;YAAKkD,SAAS,EAAC,WAAW;YAAAC,QAAA,gBACtBnD,OAAA;cAAIkD,SAAS,EAAC,YAAY;cAAAC,QAAA,EAAC;YAAuB;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACvDxD,OAAA;cAAKiE,KAAK,EAAE;gBAAEC,MAAM,EAAE;cAAQ,CAAE;cAAAf,QAAA,eAC5BnD,OAAA,CAACZ,IAAI;gBAACqB,IAAI,EAAEiD,aAAc;gBAACS,OAAO,EAAEjD;cAAa;gBAAAmC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnD,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACT,EAAA,CArDI9C,aAAa;AAAAmE,EAAA,GAAbnE,aAAa;AAAA,IAAAmE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}